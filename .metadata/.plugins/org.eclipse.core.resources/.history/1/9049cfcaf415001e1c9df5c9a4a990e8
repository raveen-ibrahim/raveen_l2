openapi: 3.0.0
info:
  title: OrganizingParty API
  description: API for the web-based event organizing system 'OrganizingParty'
  version: 1.0.0

paths:
  /events:
    post:
      summary: Creates a new event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          description: Event created successfully
        '400':
          description: Invalid event data provided

    get:
      summary: Retrieves all events
      responses:
        '200':
          description: A list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'

  /events/{eventId}:
    parameters:
      - in: path
        name: eventId
        schema:
          type: string
        required: true
        description: Unique event ID
    get:
      summary: Retrieves a specific event by ID
      responses:
        '200':
          description: Event details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found
    put:
      summary: Updates a specific event by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          description: Event updated successfully
        '400':
          description: Invalid event data provided
        '404':
          description: Event not found
    delete:
      summary: Deletes a specific event by ID
      responses:
        '200':
          description: Event deleted successfully
        '404':
          description: Event not found

  /events/{eventId}/guests:
    parameters:
      - in: path
        name: eventId
        schema:
          type: string
        required: true
        description: Unique event ID
    post:
      summary: Adds a new guest to a specific event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Guest'
      responses:
        '200':
          description: Guest added successfully
        '400':
          description: Invalid guest data provided
    get:
      summary: Retrieves all guests for a specific event
      responses:
        '200':
          description: A list of guests for the event
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Guest'
    put:
      summary: Updates a specific guest by ID for a specific event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Guest'
      responses:
        '200':
          description: Guest updated successfully
        '400':
          description: Invalid guest data provided
        '404':
          description: Guest not found
    delete:
      summary: Deletes a specific guest by ID for a specific event
      responses:
        '200':
          description: Guest deleted successfully
        '404':
          description: Guest not found

components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the event
        name:
          type: string
          description: Name of the event
        date:
          type: string
          format: date-time
          description: Date and time of the event
        location:
          type: string
          description: Location of the event

    Guest:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the guest
        name:
          type: string
          description: Name of the guest
        email:
          type: string
          description: Email of the guest
        rsvp:
          type: string
          enum: [Yes, No, Maybe]
          description: RSVP status of the guest
